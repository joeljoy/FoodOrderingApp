DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE USERS(id SERIAL, firstname VARCHAR(30) NOT NULL, lastname VARCHAR(30) ,  email VARCHAR(50), contact_number VARCHAR(30) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL,PRIMARY KEY (id));

DROP TABLE IF EXISTS CATEGORY CASCADE;
CREATE TABLE CATEGORY(id SERIAL, category_name VARCHAR(255), PRIMARY KEY (id));

DROP TABLE IF EXISTS COUPON CASCADE;
CREATE TABLE COUPON(id SERIAL, coupon_name VARCHAR(255), percent INTEGER NOT NULL ,PRIMARY KEY (id));

DROP TABLE IF EXISTS PAYMENT CASCADE;
CREATE TABLE PAYMENT(id SERIAL, payment_name VARCHAR(255), PRIMARY KEY (id));

DROP TABLE IF EXISTS STATES CASCADE;
CREATE TABLE STATES(id SERIAL, state_name VARCHAR(30),PRIMARY KEY (id));

DROP TABLE IF EXISTS ADDRESS CASCADE;
CREATE TABLE ADDRESS(id SERIAL, flat_buil_number VARCHAR(255), locality VARCHAR(255),city VARCHAR(30),zipcode VARCHAR(30), state_id INTEGER ,PRIMARY KEY (id),FOREIGN KEY (state_id) REFERENCES STATES(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS USER_ADDRESS CASCADE;
CREATE TABLE USER_ADDRESS(id SERIAL,type VARCHAR(10) DEFAULT 'temp',user_id INTEGER NOT NULL,address_id INTEGER NOT NULL ,PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,FOREIGN KEY (address_id) REFERENCES ADDRESS(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS ITEM CASCADE;
CREATE TABLE ITEM(id SERIAL, item_name VARCHAR(30) NOT NULL, price INTEGER NOT NULL, type VARCHAR(10) NOT NULL, PRIMARY KEY (id));

DROP TABLE IF EXISTS RESTAURANT CASCADE;
CREATE TABLE RESTAURANT(id SERIAL, restaurant_name VARCHAR(30) NOT NULL, photo_url VARCHAR(255), user_rating DECIMAL NOT NULL, average_price_for_two INTEGER NOT NULL, number_of_users_rated INTEGER NOT NULL DEFAULT 0, address_id INTEGER NOT NULL , PRIMARY KEY(id), FOREIGN KEY (address_id) REFERENCES ADDRESS(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS ORDERS CASCADE;
CREATE TABLE ORDERS(id SERIAL, bill DECIMAL NOT NULL, coupon_id INTEGER,discount DECIMAL DEFAULT 0, date TIMESTAMP NOT NULL , payment_id INTEGER,user_id INTEGER NOT NULL, address_id INTEGER NOT NULL,PRIMARY KEY(id), FOREIGN KEY (payment_id) REFERENCES PAYMENT(id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE, FOREIGN KEY (address_id) REFERENCES ADDRESS(id) ON DELETE CASCADE,FOREIGN KEY (coupon_id) REFERENCES COUPON(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS CATEGORY_ITEM CASCADE;
CREATE TABLE CATEGORY_ITEM(id SERIAL, item_id INTEGER NOT NULL,category_id INTEGER NOT NULL, PRIMARY KEY (id),FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE, FOREIGN KEY (category_id) REFERENCES CATEGORY(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS RESTAURANT_ITEM CASCADE;
CREATE TABLE RESTAURANT_ITEM(id SERIAL, item_id INTEGER NOT NULL, restaurant_id INTEGER NOT NULL, PRIMARY KEY (id),FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE, FOREIGN KEY (restaurant_id) REFERENCES RESTAURANT(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS ORDER_ITEM CASCADE;
CREATE TABLE ORDER_ITEM(id SERIAL, order_id INTEGER NOT NULL, item_id INTEGER NOT NULL, quantity INTEGER NOT NULL, price INTEGER NOT NULL ,PRIMARY KEY (id),FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE, FOREIGN KEY (order_id) REFERENCES ORDERS(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS RESTAURANT_CATEGORY CASCADE;
CREATE TABLE RESTAURANT_CATEGORY(id SERIAL, restaurant_id INTEGER NOT NULL, category_id INTEGER NOT NULL,PRIMARY KEY (id), FOREIGN KEY (category_id) REFERENCES CATEGORY(id) ON DELETE CASCADE, FOREIGN KEY (restaurant_id) REFERENCES RESTAURANT(id) ON DELETE CASCADE);

DROP TABLE IF EXISTS USER_AUTH_TOKEN CASCADE;
CREATE TABLE USER_AUTH_TOKEN(id SERIAL, user_id INTEGER NOT NULL, access_token VARCHAR(255), login_at TIMESTAMP, logout_at TIMESTAMP, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE);